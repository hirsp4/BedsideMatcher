//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.5.4
//
// Created by Quasar Development at 14-04-2015
//
//---------------------------------------------------


#import "SupplyChainServicePortBinding.h"
#import "RequestResultHandler.h"
#import "Helper.h"

@implementation SupplyChainServicePortBinding
@synthesize Url,ShouldAddAdornments,Headers;
@synthesize EnableLogging;

- (id) init {
    if(self = [super init])
    {
        self.Url=@"http://supplychain.i4mi.bfh.ch:8080/SupplyChainService/services/SupplyChainService";
        self.ShouldAddAdornments=YES;
    }
    return self;
}

- (id) initWithUrl: (NSString*) url {
    if(self = [self init])
    {
        self.Url=url;
    }
    return self;
}

-(void) sendImplementation:(NSMutableURLRequest*) request requestMgr:(RequestResultHandler*) requestMgr
{
    [requestMgr sendImplementation:request];
}

-(RequestResultHandler*) CreateRequestResultHandler
{
    RequestResultHandler* handler= [[RequestResultHandler alloc]init:SOAPVERSION_11];
    handler.EnableLogging = EnableLogging;
    return handler;
}

-(NSMutableURLRequest*) createRequest:(NSString *)__soapAction __request:(RequestResultHandler*) __request
{
    NSURL *__url = [NSURL URLWithString:Url];
    NSMutableURLRequest *__requestObj = [NSMutableURLRequest requestWithURL:__url];
    [__request prepareRequest:__requestObj];

    [__requestObj addValue: __soapAction forHTTPHeaderField:@"SOAPAction"];

    for (NSString* key in self.Headers) {
        [__requestObj addValue: [self.Headers objectForKey:key] forHTTPHeaderField:key];
    }
    [__requestObj setHTTPMethod:@"POST"];

    return __requestObj;
}


-(void) sendImplementation:(NSMutableURLRequest*) request requestMgr:(RequestResultHandler*) requestMgr callback:(void (^)(RequestResultHandler *)) callback
{
    [requestMgr sendImplementation:request callbackDelegate:callback];
}

-(void) addAdornments:(DDXMLElement*)__methodElement
{
    if(ShouldAddAdornments)
    {
        [__methodElement addAttribute:[DDXMLNode attributeWithName:@"id" stringValue:@"o0"]];
        [__methodElement addAttribute:[DDXMLNode attributeWithName:@"c:root" stringValue:@"1"]];
    }
}

-(NSMutableURLRequest*) createsayHelloWorldFromRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"sayHelloWorldFrom" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) sayHelloWorldFromAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsayHelloWorldFromRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        __res= [__result stringValue];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) sayHelloWorldFromAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsayHelloWorldFromRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:[__result stringValue] methodName:@"sayHelloWorldFrom"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NSString*) sayHelloWorldFrom:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsayHelloWorldFromRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
    return [__result stringValue];
}
-(NSMutableURLRequest*) creategetCheckedInItemsRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getCheckedInItems" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getCheckedInItemsAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetCheckedInItemsRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        __res= (webServiceResult*)[__request createObject:__result type:[webServiceResult class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getCheckedInItemsAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetCheckedInItemsRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:(webServiceResult*)[__request createObject:__result type:[webServiceResult class]] methodName:@"getCheckedInItems"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(webServiceResult*) getCheckedInItems:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetCheckedInItemsRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
    return (webServiceResult*)[__request createObject:__result type:[webServiceResult class]];
}
-(NSMutableURLRequest*) createcheckinItemsRequest:(checkinItems*) checkinItems __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=__request.Body;
    [self addAdornments:__methodElement];
             
    DDXMLElement* __checkinItemsItemElement=[__request writeElement:checkinItems type:[checkinItems class] name:@"checkinItems" URI:@"http://service/" parent:__methodElement skipNullProperty:NO];
    if(__checkinItemsItemElement!=nil)
    {
        [checkinItems serialize:__checkinItemsItemElement __request: __request];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) checkinItemsAsync:(checkinItems*) checkinItems __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckinItemsRequest:checkinItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        __res= (webServiceResult*)[__request createObject:__mainReturn type:[webServiceResult class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) checkinItemsAsync:(checkinItems*) checkinItems __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckinItemsRequest:checkinItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        [__target onSuccess:(webServiceResult*)[__request createObject:__mainReturn type:[webServiceResult class]] methodName:@"checkinItems"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(webServiceResult*) checkinItems:(checkinItems*) checkinItems __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckinItemsRequest:checkinItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
    return (webServiceResult*)[__request createObject:__mainReturn type:[webServiceResult class]];
}
-(NSMutableURLRequest*) createsetOrderRequest:(order*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"setOrder" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[order class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [arg0 serialize:__arg0ItemElement __request: __request];
    }
             
    DDXMLElement* __arg1ItemElement=[__request writeElement:arg1 type:[NSString class] name:@"arg1" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg1ItemElement!=nil)
    {
        [__arg1ItemElement setStringValue:arg1];
    }
             
    DDXMLElement* __arg2ItemElement=[__request writeElement:arg2 type:[NSString class] name:@"arg2" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg2ItemElement!=nil)
    {
        [__arg2ItemElement setStringValue:arg2];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) setOrderAsync:(order*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsetOrderRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        __res= [[NSNumber alloc]initWithBool:[[__result stringValue] boolValue]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) setOrderAsync:(order*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsetOrderRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:[[NSNumber alloc]initWithBool:[[__result stringValue] boolValue]] methodName:@"setOrder"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NSNumber*) setOrder:(order*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsetOrderRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
    return [[NSNumber alloc]initWithBool:[[__result stringValue] boolValue]];
}
-(NSMutableURLRequest*) createcheckoutItemsRequest:(checkoutItems*) checkoutItems __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=__request.Body;
    [self addAdornments:__methodElement];
             
    DDXMLElement* __checkoutItemsItemElement=[__request writeElement:checkoutItems type:[checkoutItems class] name:@"checkoutItems" URI:@"http://service/" parent:__methodElement skipNullProperty:NO];
    if(__checkoutItemsItemElement!=nil)
    {
        [checkoutItems serialize:__checkoutItemsItemElement __request: __request];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) checkoutItemsAsync:(checkoutItems*) checkoutItems __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckoutItemsRequest:checkoutItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        __res= (webServiceResult*)[__request createObject:__mainReturn type:[webServiceResult class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) checkoutItemsAsync:(checkoutItems*) checkoutItems __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckoutItemsRequest:checkoutItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        [__target onSuccess:(webServiceResult*)[__request createObject:__mainReturn type:[webServiceResult class]] methodName:@"checkoutItems"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(webServiceResult*) checkoutItems:(checkoutItems*) checkoutItems __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckoutItemsRequest:checkoutItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
    return (webServiceResult*)[__request createObject:__mainReturn type:[webServiceResult class]];
}
-(NSMutableURLRequest*) createinsertTrackingItemsRequest:(insertTrackingItems*) insertTrackingItems __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=__request.Body;
    [self addAdornments:__methodElement];
             
    DDXMLElement* __insertTrackingItemsItemElement=[__request writeElement:insertTrackingItems type:[insertTrackingItems class] name:@"insertTrackingItems" URI:@"http://service/" parent:__methodElement skipNullProperty:NO];
    if(__insertTrackingItemsItemElement!=nil)
    {
        [insertTrackingItems serialize:__insertTrackingItemsItemElement __request: __request];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) insertTrackingItemsAsync:(insertTrackingItems*) insertTrackingItems __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createinsertTrackingItemsRequest:insertTrackingItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        __res=nil;
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) insertTrackingItemsAsync:(insertTrackingItems*) insertTrackingItems __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createinsertTrackingItemsRequest:insertTrackingItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        [__target onSuccess:nil methodName:@"insertTrackingItems"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(void) insertTrackingItems:(insertTrackingItems*) insertTrackingItems __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createinsertTrackingItemsRequest:insertTrackingItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return;
    }
}
-(NSMutableURLRequest*) creategetItemsBySSCCRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getItemsBySSCC" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getItemsBySSCCAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsBySSCCRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getItemsBySSCCResponse"];
        __res= (getItemsBySSCCResponse*)[__request createObject:__result type:[getItemsBySSCCResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getItemsBySSCCAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsBySSCCRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getItemsBySSCCResponse"];
        [__target onSuccess:(getItemsBySSCCResponse*)[__request createObject:__result type:[getItemsBySSCCResponse class]] methodName:@"getItemsBySSCC"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(getItemsBySSCCResponse*) getItemsBySSCC:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsBySSCCRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getItemsBySSCCResponse"];
    return (getItemsBySSCCResponse*)[__request createObject:__result type:[getItemsBySSCCResponse class]];
}
-(NSMutableURLRequest*) createprocessOrderRequest:(order*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"processOrder" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[order class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [arg0 serialize:__arg0ItemElement __request: __request];
    }
             
    DDXMLElement* __arg1ItemElement=[__request writeElement:arg1 type:[NSString class] name:@"arg1" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg1ItemElement!=nil)
    {
        [__arg1ItemElement setStringValue:arg1];
    }
             
    DDXMLElement* __arg2ItemElement=[__request writeElement:arg2 type:[NSString class] name:@"arg2" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg2ItemElement!=nil)
    {
        [__arg2ItemElement setStringValue:arg2];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) processOrderAsync:(order*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createprocessOrderRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        __res= (production*)[__request createObject:__result type:[production class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) processOrderAsync:(order*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createprocessOrderRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:(production*)[__request createObject:__result type:[production class]] methodName:@"processOrder"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(production*) processOrder:(order*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createprocessOrderRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
    return (production*)[__request createObject:__result type:[production class]];
}
-(NSMutableURLRequest*) creategetQuantitiesRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getQuantities" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getQuantitiesAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetQuantitiesRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getQuantitiesResponse"];
        __res= (getQuantitiesResponse*)[__request createObject:__result type:[getQuantitiesResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getQuantitiesAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetQuantitiesRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getQuantitiesResponse"];
        [__target onSuccess:(getQuantitiesResponse*)[__request createObject:__result type:[getQuantitiesResponse class]] methodName:@"getQuantities"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(getQuantitiesResponse*) getQuantities:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetQuantitiesRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getQuantitiesResponse"];
    return (getQuantitiesResponse*)[__request createObject:__result type:[getQuantitiesResponse class]];
}
-(NSMutableURLRequest*) creategetOpenOrdersByGLNRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getOpenOrdersByGLN" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getOpenOrdersByGLNAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetOpenOrdersByGLNRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getOpenOrdersByGLNResponse"];
        __res= (getOpenOrdersByGLNResponse*)[__request createObject:__result type:[getOpenOrdersByGLNResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getOpenOrdersByGLNAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetOpenOrdersByGLNRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getOpenOrdersByGLNResponse"];
        [__target onSuccess:(getOpenOrdersByGLNResponse*)[__request createObject:__result type:[getOpenOrdersByGLNResponse class]] methodName:@"getOpenOrdersByGLN"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(getOpenOrdersByGLNResponse*) getOpenOrdersByGLN:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetOpenOrdersByGLNRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getOpenOrdersByGLNResponse"];
    return (getOpenOrdersByGLNResponse*)[__request createObject:__result type:[getOpenOrdersByGLNResponse class]];
}
-(NSMutableURLRequest*) creategetItemByIdentifierRequest:(NSString*) arg0 arg1:(NSString*) arg1 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getItemByIdentifier" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
             
    DDXMLElement* __arg1ItemElement=[__request writeElement:arg1 type:[NSString class] name:@"arg1" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg1ItemElement!=nil)
    {
        [__arg1ItemElement setStringValue:arg1];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getItemByIdentifierAsync:(NSString*) arg0 arg1:(NSString*) arg1 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemByIdentifierRequest:arg0 arg1: arg1 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        __res= (item*)[__request createObject:__result type:[item class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getItemByIdentifierAsync:(NSString*) arg0 arg1:(NSString*) arg1 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemByIdentifierRequest:arg0 arg1: arg1 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:(item*)[__request createObject:__result type:[item class]] methodName:@"getItemByIdentifier"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(item*) getItemByIdentifier:(NSString*) arg0 arg1:(NSString*) arg1 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemByIdentifierRequest:arg0 arg1: arg1 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
    return (item*)[__request createObject:__result type:[item class]];
}
-(NSMutableURLRequest*) creategetItemsByBatchRequest:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSDate*) arg2 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getItemsByBatch" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
             
    DDXMLElement* __arg1ItemElement=[__request writeElement:arg1 type:[NSString class] name:@"arg1" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg1ItemElement!=nil)
    {
        [__arg1ItemElement setStringValue:arg1];
    }
             
    DDXMLElement* __arg2ItemElement=[__request writeElement:arg2 type:[NSDate class] name:@"arg2" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg2ItemElement!=nil)
    {
        [__arg2ItemElement setStringValue:[Helper getStringFromDate:arg2]];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getItemsByBatchAsync:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSDate*) arg2 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsByBatchRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getItemsByBatchResponse"];
        __res= (getItemsByBatchResponse*)[__request createObject:__result type:[getItemsByBatchResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getItemsByBatchAsync:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSDate*) arg2 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsByBatchRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getItemsByBatchResponse"];
        [__target onSuccess:(getItemsByBatchResponse*)[__request createObject:__result type:[getItemsByBatchResponse class]] methodName:@"getItemsByBatch"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(getItemsByBatchResponse*) getItemsByBatch:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSDate*) arg2 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsByBatchRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getItemsByBatchResponse"];
    return (getItemsByBatchResponse*)[__request createObject:__result type:[getItemsByBatchResponse class]];
}
-(NSMutableURLRequest*) creategetOrderForSSCCRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getOrderForSSCC" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getOrderForSSCCAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetOrderForSSCCRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        __res= [__result stringValue];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getOrderForSSCCAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetOrderForSSCCRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:[__result stringValue] methodName:@"getOrderForSSCC"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NSString*) getOrderForSSCC:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetOrderForSSCCRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
    return [__result stringValue];
}
-(NSMutableURLRequest*) createresetTrackedItemsRequest:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"resetTrackedItems" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) resetTrackedItemsAsync:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createresetTrackedItemsRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        __res=nil;
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) resetTrackedItemsAsync:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createresetTrackedItemsRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        [__target onSuccess:nil methodName:@"resetTrackedItems"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(void) resetTrackedItems:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createresetTrackedItemsRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return;
    }
}
-(NSMutableURLRequest*) createupdatePreparedMedicationsRequest:(updatePreparedMedications*) updatePreparedMedications __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=__request.Body;
    [self addAdornments:__methodElement];
             
    DDXMLElement* __updatePreparedMedicationsItemElement=[__request writeElement:updatePreparedMedications type:[updatePreparedMedications class] name:@"updatePreparedMedications" URI:@"http://service/" parent:__methodElement skipNullProperty:NO];
    if(__updatePreparedMedicationsItemElement!=nil)
    {
        [updatePreparedMedications serialize:__updatePreparedMedicationsItemElement __request: __request];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) updatePreparedMedicationsAsync:(updatePreparedMedications*) updatePreparedMedications __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createupdatePreparedMedicationsRequest:updatePreparedMedications __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        __res= [[NSNumber alloc]initWithBool:[[__mainReturn stringValue] boolValue]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) updatePreparedMedicationsAsync:(updatePreparedMedications*) updatePreparedMedications __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createupdatePreparedMedicationsRequest:updatePreparedMedications __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        [__target onSuccess:[[NSNumber alloc]initWithBool:[[__mainReturn stringValue] boolValue]] methodName:@"updatePreparedMedications"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NSNumber*) updatePreparedMedications:(updatePreparedMedications*) updatePreparedMedications __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createupdatePreparedMedicationsRequest:updatePreparedMedications __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
    return [[NSNumber alloc]initWithBool:[[__mainReturn stringValue] boolValue]];
}
-(NSMutableURLRequest*) creategetPatientByMinorIdRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getPatientByMinorId" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getPatientByMinorIdAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPatientByMinorIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        __res= (trspPatient*)[__request createObject:__result type:[trspPatient class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getPatientByMinorIdAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPatientByMinorIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:(trspPatient*)[__request createObject:__result type:[trspPatient class]] methodName:@"getPatientByMinorId"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(trspPatient*) getPatientByMinorId:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPatientByMinorIdRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
    return (trspPatient*)[__request createObject:__result type:[trspPatient class]];
}
-(NSMutableURLRequest*) creategetPatientByPidRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getPatientByPid" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getPatientByPidAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPatientByPidRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        __res= (trspPatient*)[__request createObject:__result type:[trspPatient class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getPatientByPidAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPatientByPidRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:(trspPatient*)[__request createObject:__result type:[trspPatient class]] methodName:@"getPatientByPid"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(trspPatient*) getPatientByPid:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPatientByPidRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
    return (trspPatient*)[__request createObject:__result type:[trspPatient class]];
}
-(NSMutableURLRequest*) createupdatePrescriptionsRequest:(updatePrescriptions*) updatePrescriptions __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=__request.Body;
    [self addAdornments:__methodElement];
             
    DDXMLElement* __updatePrescriptionsItemElement=[__request writeElement:updatePrescriptions type:[updatePrescriptions class] name:@"updatePrescriptions" URI:@"http://service/" parent:__methodElement skipNullProperty:NO];
    if(__updatePrescriptionsItemElement!=nil)
    {
        [updatePrescriptions serialize:__updatePrescriptionsItemElement __request: __request];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) updatePrescriptionsAsync:(updatePrescriptions*) updatePrescriptions __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createupdatePrescriptionsRequest:updatePrescriptions __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        __res= [[NSNumber alloc]initWithBool:[[__mainReturn stringValue] boolValue]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) updatePrescriptionsAsync:(updatePrescriptions*) updatePrescriptions __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createupdatePrescriptionsRequest:updatePrescriptions __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        [__target onSuccess:[[NSNumber alloc]initWithBool:[[__mainReturn stringValue] boolValue]] methodName:@"updatePrescriptions"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NSNumber*) updatePrescriptions:(updatePrescriptions*) updatePrescriptions __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createupdatePrescriptionsRequest:updatePrescriptions __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
    return [[NSNumber alloc]initWithBool:[[__mainReturn stringValue] boolValue]];
}
-(NSMutableURLRequest*) creategetDosetForPatientRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getDosetForPatient" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getDosetForPatientAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetDosetForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        __res= [__result stringValue];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getDosetForPatientAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetDosetForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:[__result stringValue] methodName:@"getDosetForPatient"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NSString*) getDosetForPatient:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetDosetForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
    return [__result stringValue];
}
-(NSMutableURLRequest*) creategetItemsByGSINRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getItemsByGSIN" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getItemsByGSINAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsByGSINRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        __res= (webServiceResult*)[__request createObject:__result type:[webServiceResult class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getItemsByGSINAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsByGSINRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:(webServiceResult*)[__request createObject:__result type:[webServiceResult class]] methodName:@"getItemsByGSIN"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(webServiceResult*) getItemsByGSIN:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsByGSINRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
    return (webServiceResult*)[__request createObject:__result type:[webServiceResult class]];
}
-(NSMutableURLRequest*) creategetProductForSecondaryPackageRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getProductForSecondaryPackage" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getProductForSecondaryPackageAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetProductForSecondaryPackageRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        __res= [__result stringValue];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getProductForSecondaryPackageAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetProductForSecondaryPackageRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:[__result stringValue] methodName:@"getProductForSecondaryPackage"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NSString*) getProductForSecondaryPackage:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetProductForSecondaryPackageRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"return"];
    return [__result stringValue];
}
-(NSMutableURLRequest*) creategetStationsRequest:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getStations" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getStationsAsync:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetStationsRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getStationsResponse"];
        __res= (getStationsResponse*)[__request createObject:__result type:[getStationsResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getStationsAsync:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetStationsRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getStationsResponse"];
        [__target onSuccess:(getStationsResponse*)[__request createObject:__result type:[getStationsResponse class]] methodName:@"getStations"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(getStationsResponse*) getStations:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetStationsRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getStationsResponse"];
    return (getStationsResponse*)[__request createObject:__result type:[getStationsResponse class]];
}
-(NSMutableURLRequest*) creategetPatientsRequest:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getPatients" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getPatientsAsync:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPatientsRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPatientsResponse"];
        __res= (getPatientsResponse*)[__request createObject:__result type:[getPatientsResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getPatientsAsync:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPatientsRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPatientsResponse"];
        [__target onSuccess:(getPatientsResponse*)[__request createObject:__result type:[getPatientsResponse class]] methodName:@"getPatients"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(getPatientsResponse*) getPatients:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPatientsRequest:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPatientsResponse"];
    return (getPatientsResponse*)[__request createObject:__result type:[getPatientsResponse class]];
}
-(NSMutableURLRequest*) creategetPrescriptionsForPatientRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getPrescriptionsForPatient" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getPrescriptionsForPatientAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPrescriptionsForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPrescriptionsForPatientResponse"];
        __res= (getPrescriptionsForPatientResponse*)[__request createObject:__result type:[getPrescriptionsForPatientResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getPrescriptionsForPatientAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPrescriptionsForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPrescriptionsForPatientResponse"];
        [__target onSuccess:(getPrescriptionsForPatientResponse*)[__request createObject:__result type:[getPrescriptionsForPatientResponse class]] methodName:@"getPrescriptionsForPatient"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(getPrescriptionsForPatientResponse*) getPrescriptionsForPatient:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPrescriptionsForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPrescriptionsForPatientResponse"];
    return (getPrescriptionsForPatientResponse*)[__request createObject:__result type:[getPrescriptionsForPatientResponse class]];
}
-(NSMutableURLRequest*) creategetPrescriptionsWithPreparedMedicationsForPatientRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getPrescriptionsWithPreparedMedicationsForPatient" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getPrescriptionsWithPreparedMedicationsForPatientAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPrescriptionsWithPreparedMedicationsForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPrescriptionsWithPreparedMedicationsForPatientResponse"];
        __res= (getPrescriptionsWithPreparedMedicationsForPatientResponse*)[__request createObject:__result type:[getPrescriptionsWithPreparedMedicationsForPatientResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getPrescriptionsWithPreparedMedicationsForPatientAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPrescriptionsWithPreparedMedicationsForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPrescriptionsWithPreparedMedicationsForPatientResponse"];
        [__target onSuccess:(getPrescriptionsWithPreparedMedicationsForPatientResponse*)[__request createObject:__result type:[getPrescriptionsWithPreparedMedicationsForPatientResponse class]] methodName:@"getPrescriptionsWithPreparedMedicationsForPatient"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(getPrescriptionsWithPreparedMedicationsForPatientResponse*) getPrescriptionsWithPreparedMedicationsForPatient:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPrescriptionsWithPreparedMedicationsForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPrescriptionsWithPreparedMedicationsForPatientResponse"];
    return (getPrescriptionsWithPreparedMedicationsForPatientResponse*)[__request createObject:__result type:[getPrescriptionsWithPreparedMedicationsForPatientResponse class]];
}
-(NSMutableURLRequest*) createsavePreparedMedicationsRequest:(savePreparedMedications*) savePreparedMedications __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=__request.Body;
    [self addAdornments:__methodElement];
             
    DDXMLElement* __savePreparedMedicationsItemElement=[__request writeElement:savePreparedMedications type:[savePreparedMedications class] name:@"savePreparedMedications" URI:@"http://service/" parent:__methodElement skipNullProperty:NO];
    if(__savePreparedMedicationsItemElement!=nil)
    {
        [savePreparedMedications serialize:__savePreparedMedicationsItemElement __request: __request];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) savePreparedMedicationsAsync:(savePreparedMedications*) savePreparedMedications __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsavePreparedMedicationsRequest:savePreparedMedications __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        __res= [[NSNumber alloc]initWithBool:[[__mainReturn stringValue] boolValue]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) savePreparedMedicationsAsync:(savePreparedMedications*) savePreparedMedications __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsavePreparedMedicationsRequest:savePreparedMedications __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        [__target onSuccess:[[NSNumber alloc]initWithBool:[[__mainReturn stringValue] boolValue]] methodName:@"savePreparedMedications"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NSNumber*) savePreparedMedications:(savePreparedMedications*) savePreparedMedications __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsavePreparedMedicationsRequest:savePreparedMedications __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
    return [[NSNumber alloc]initWithBool:[[__mainReturn stringValue] boolValue]];
}
-(NSMutableURLRequest*) creategetPreparedMedicationsForPatientRequest:(NSString*) arg0 __request:(RequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getPreparedMedicationsForPatient" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(RequestResultHandler*) getPreparedMedicationsForPatientAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPreparedMedicationsForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPreparedMedicationsForPatientResponse"];
        __res= (getPreparedMedicationsForPatientResponse*)[__request createObject:__result type:[getPreparedMedicationsForPatientResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(RequestResultHandler*) getPreparedMedicationsForPatientAsync:(NSString*) arg0 __target:(id<SoapServiceResponse>) __target
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPreparedMedicationsForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(RequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPreparedMedicationsForPatientResponse"];
        [__target onSuccess:(getPreparedMedicationsForPatientResponse*)[__request createObject:__result type:[getPreparedMedicationsForPatientResponse class]] methodName:@"getPreparedMedicationsForPatient"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(getPreparedMedicationsForPatientResponse*) getPreparedMedicationsForPatient:(NSString*) arg0 __error:(NSError**) __error
{
    RequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetPreparedMedicationsForPatientRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[Helper getResultElement:__request.OutputBody name:@"getPreparedMedicationsForPatientResponse"];
    return (getPreparedMedicationsForPatientResponse*)[__request createObject:__result type:[getPreparedMedicationsForPatientResponse class]];
}

@end
