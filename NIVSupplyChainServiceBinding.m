//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.5.2
//
// Created by Quasar Development at 10-03-2015
//
//---------------------------------------------------


#import "NIVSupplyChainServiceBinding.h"
#import "NIVRequestResultHandler.h"
#import "NIVHelper.h"

@implementation NIVSupplyChainServiceBinding
@synthesize Url,ShouldAddAdornments,Headers;
@synthesize EnableLogging;

- (id) init {
    if(self = [super init])
    {
        self.Url=@"http://localhost:8080/services/SupplyChainService";
        self.ShouldAddAdornments=YES;
    }
    return self;
}

- (id) initWithUrl: (NSString*) url {
    if(self = [self init])
    {
        self.Url=url;
    }
    return self;
}

-(void) sendImplementation:(NSMutableURLRequest*) request requestMgr:(NIVRequestResultHandler*) requestMgr
{
    [requestMgr sendImplementation:request];
}

-(NIVRequestResultHandler*) CreateRequestResultHandler
{
    NIVRequestResultHandler* handler= [[NIVRequestResultHandler alloc]init:SOAPVERSION_11];
    handler.EnableLogging = EnableLogging;
    return handler;
}

-(NSMutableURLRequest*) createRequest:(NSString *)__soapAction __request:(NIVRequestResultHandler*) __request
{
    NSURL *__url = [NSURL URLWithString:Url];
    NSMutableURLRequest *__requestObj = [NSMutableURLRequest requestWithURL:__url];
    [__request prepareRequest:__requestObj];

    [__requestObj addValue: __soapAction forHTTPHeaderField:@"SOAPAction"];

    for (NSString* key in self.Headers) {
        [__requestObj addValue: [self.Headers objectForKey:key] forHTTPHeaderField:key];
    }
    [__requestObj setHTTPMethod:@"POST"];

    return __requestObj;
}


-(void) sendImplementation:(NSMutableURLRequest*) request requestMgr:(NIVRequestResultHandler*) requestMgr callback:(void (^)(NIVRequestResultHandler *)) callback
{
    [requestMgr sendImplementation:request callbackDelegate:callback];
}

-(void) addAdornments:(DDXMLElement*)__methodElement
{
    if(ShouldAddAdornments)
    {
        [__methodElement addAttribute:[DDXMLNode attributeWithName:@"id" stringValue:@"o0"]];
        [__methodElement addAttribute:[DDXMLNode attributeWithName:@"c:root" stringValue:@"1"]];
    }
}

-(NSMutableURLRequest*) createsayHelloWorldFromRequest:(NSString*) arg0 __request:(NIVRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"sayHelloWorldFrom" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(NIVRequestResultHandler*) sayHelloWorldFromAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsayHelloWorldFromRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"return"];
        __res= [__result stringValue];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(NIVRequestResultHandler*) sayHelloWorldFromAsync:(NSString*) arg0 __target:(id<NIVSoapServiceResponse>) __target
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsayHelloWorldFromRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:[__result stringValue] methodName:@"sayHelloWorldFrom"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NSString*) sayHelloWorldFrom:(NSString*) arg0 __error:(NSError**) __error
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsayHelloWorldFromRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"return"];
    return [__result stringValue];
}
-(NSMutableURLRequest*) creategetCheckedInItemsRequest:(NSString*) arg0 __request:(NIVRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getCheckedInItems" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(NIVRequestResultHandler*) getCheckedInItemsAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetCheckedInItemsRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"return"];
        __res= (NIVwebServiceResult*)[__request createObject:__result type:[NIVwebServiceResult class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(NIVRequestResultHandler*) getCheckedInItemsAsync:(NSString*) arg0 __target:(id<NIVSoapServiceResponse>) __target
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetCheckedInItemsRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:(NIVwebServiceResult*)[__request createObject:__result type:[NIVwebServiceResult class]] methodName:@"getCheckedInItems"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NIVwebServiceResult*) getCheckedInItems:(NSString*) arg0 __error:(NSError**) __error
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetCheckedInItemsRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"return"];
    return (NIVwebServiceResult*)[__request createObject:__result type:[NIVwebServiceResult class]];
}
-(NSMutableURLRequest*) createcheckinItemsRequest:(NIVcheckinItems*) checkinItems __request:(NIVRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=__request.Body;
    [self addAdornments:__methodElement];
             
    DDXMLElement* __checkinItemsItemElement=[__request writeElement:checkinItems type:[NIVcheckinItems class] name:@"checkinItems" URI:@"http://service/" parent:__methodElement skipNullProperty:NO];
    if(__checkinItemsItemElement!=nil)
    {
        [checkinItems serialize:__checkinItemsItemElement __request: __request];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(NIVRequestResultHandler*) checkinItemsAsync:(NIVcheckinItems*) checkinItems __target:(id) __target __handler:(SEL) __handler
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckinItemsRequest:checkinItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        __res= (NIVwebServiceResult*)[__request createObject:__mainReturn type:[NIVwebServiceResult class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(NIVRequestResultHandler*) checkinItemsAsync:(NIVcheckinItems*) checkinItems __target:(id<NIVSoapServiceResponse>) __target
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckinItemsRequest:checkinItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        [__target onSuccess:(NIVwebServiceResult*)[__request createObject:__mainReturn type:[NIVwebServiceResult class]] methodName:@"checkinItems"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NIVwebServiceResult*) checkinItems:(NIVcheckinItems*) checkinItems __error:(NSError**) __error
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckinItemsRequest:checkinItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
    return (NIVwebServiceResult*)[__request createObject:__mainReturn type:[NIVwebServiceResult class]];
}
-(NSMutableURLRequest*) createsetOrderRequest:(NIVorder*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __request:(NIVRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"setOrder" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NIVorder class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [arg0 serialize:__arg0ItemElement __request: __request];
    }
             
    DDXMLElement* __arg1ItemElement=[__request writeElement:arg1 type:[NSString class] name:@"arg1" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg1ItemElement!=nil)
    {
        [__arg1ItemElement setStringValue:arg1];
    }
             
    DDXMLElement* __arg2ItemElement=[__request writeElement:arg2 type:[NSString class] name:@"arg2" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg2ItemElement!=nil)
    {
        [__arg2ItemElement setStringValue:arg2];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(NIVRequestResultHandler*) setOrderAsync:(NIVorder*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id) __target __handler:(SEL) __handler
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsetOrderRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"return"];
        __res= [[NSNumber alloc]initWithBool:[[__result stringValue] boolValue]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(NIVRequestResultHandler*) setOrderAsync:(NIVorder*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id<NIVSoapServiceResponse>) __target
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsetOrderRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"return"];
        [__target onSuccess:[[NSNumber alloc]initWithBool:[[__result stringValue] boolValue]] methodName:@"setOrder"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NSNumber*) setOrder:(NIVorder*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __error:(NSError**) __error
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createsetOrderRequest:arg0 arg1: arg1 arg2: arg2 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"return"];
    return [[NSNumber alloc]initWithBool:[[__result stringValue] boolValue]];
}
-(NSMutableURLRequest*) createcheckoutItemsRequest:(NIVcheckoutItems*) checkoutItems __request:(NIVRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=__request.Body;
    [self addAdornments:__methodElement];
             
    DDXMLElement* __checkoutItemsItemElement=[__request writeElement:checkoutItems type:[NIVcheckoutItems class] name:@"checkoutItems" URI:@"http://service/" parent:__methodElement skipNullProperty:NO];
    if(__checkoutItemsItemElement!=nil)
    {
        [checkoutItems serialize:__checkoutItemsItemElement __request: __request];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(NIVRequestResultHandler*) checkoutItemsAsync:(NIVcheckoutItems*) checkoutItems __target:(id) __target __handler:(SEL) __handler
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckoutItemsRequest:checkoutItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        __res= (NIVwebServiceResult*)[__request createObject:__mainReturn type:[NIVwebServiceResult class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(NIVRequestResultHandler*) checkoutItemsAsync:(NIVcheckoutItems*) checkoutItems __target:(id<NIVSoapServiceResponse>) __target
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckoutItemsRequest:checkoutItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
        [__target onSuccess:(NIVwebServiceResult*)[__request createObject:__mainReturn type:[NIVwebServiceResult class]] methodName:@"checkoutItems"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NIVwebServiceResult*) checkoutItems:(NIVcheckoutItems*) checkoutItems __error:(NSError**) __error
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createcheckoutItemsRequest:checkoutItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__mainReturn=(DDXMLElement*)[__request.OutputBody childAtIndex:0];
    return (NIVwebServiceResult*)[__request createObject:__mainReturn type:[NIVwebServiceResult class]];
}
-(NSMutableURLRequest*) createinsertTrackingItemsRequest:(NIVinsertTrackingItems*) insertTrackingItems __request:(NIVRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=__request.Body;
    [self addAdornments:__methodElement];
             
    DDXMLElement* __insertTrackingItemsItemElement=[__request writeElement:insertTrackingItems type:[NIVinsertTrackingItems class] name:@"insertTrackingItems" URI:@"http://service/" parent:__methodElement skipNullProperty:NO];
    if(__insertTrackingItemsItemElement!=nil)
    {
        [insertTrackingItems serialize:__insertTrackingItemsItemElement __request: __request];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(NIVRequestResultHandler*) insertTrackingItemsAsync:(NIVinsertTrackingItems*) insertTrackingItems __target:(id) __target __handler:(SEL) __handler
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createinsertTrackingItemsRequest:insertTrackingItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        __res=nil;
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(NIVRequestResultHandler*) insertTrackingItemsAsync:(NIVinsertTrackingItems*) insertTrackingItems __target:(id<NIVSoapServiceResponse>) __target
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createinsertTrackingItemsRequest:insertTrackingItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        [__target onSuccess:nil methodName:@"insertTrackingItems"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(void) insertTrackingItems:(NIVinsertTrackingItems*) insertTrackingItems __error:(NSError**) __error
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self createinsertTrackingItemsRequest:insertTrackingItems __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return;
    }
}
-(NSMutableURLRequest*) creategetItemsBySSCCRequest:(NSString*) arg0 __request:(NIVRequestResultHandler*) __request
{
    DDXMLElement *__methodElement=[__request writeElement:@"getItemsBySSCC" URI:@"http://service/" parent:__request.Body];
    [self addAdornments:__methodElement];
             
    DDXMLElement* __arg0ItemElement=[__request writeElement:arg0 type:[NSString class] name:@"arg0" URI:@"" parent:__methodElement skipNullProperty:YES];
    if(__arg0ItemElement!=nil)
    {
        [__arg0ItemElement setStringValue:arg0];
    }
    
    NSMutableURLRequest* __requestObj= [self createRequest:@""  __request:__request];
    return __requestObj;
    }
    
-(NIVRequestResultHandler*) getItemsBySSCCAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsBySSCCRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    id __res;
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"getItemsBySSCCResponse"];
        __res= (NIVgetItemsBySSCCResponse*)[__request createObject:__result type:[NIVgetItemsBySSCCResponse class]];
    }
    else
    {
        __res=__requestMgr.OutputFault;
    }
    
    IMP imp = [__target methodForSelector:__handler];
    void (*func)(id, SEL,id) = (void *)imp;
    func(__target, __handler,__res);
    }];
    return __request;
}

-(NIVRequestResultHandler*) getItemsBySSCCAsync:(NSString*) arg0 __target:(id<NIVSoapServiceResponse>) __target
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsBySSCCRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request callback:^(NIVRequestResultHandler *__requestMgr) {
    if(__requestMgr.OutputFault==nil)
    {
        DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"getItemsBySSCCResponse"];
        [__target onSuccess:(NIVgetItemsBySSCCResponse*)[__request createObject:__result type:[NIVgetItemsBySSCCResponse class]] methodName:@"getItemsBySSCC"];
    }
    else
    {
        [__target onError:__requestMgr.OutputFault];
    }
    }];
    return __request;
}

-(NIVgetItemsBySSCCResponse*) getItemsBySSCC:(NSString*) arg0 __error:(NSError**) __error
{
    NIVRequestResultHandler* __request = [self CreateRequestResultHandler];
    NSMutableURLRequest *__requestObj=[self creategetItemsBySSCCRequest:arg0 __request:__request];
    [self sendImplementation:__requestObj requestMgr:__request ];
    if(__request.OutputFault!=nil)
    {
        if(__error)
        {
            *__error=__request.OutputFault;
        }
        return nil;
    }
    DDXMLElement *__result=[NIVHelper getResultElement:__request.OutputBody name:@"getItemsBySSCCResponse"];
    return (NIVgetItemsBySSCCResponse*)[__request createObject:__result type:[NIVgetItemsBySSCCResponse class]];
}
    
-(NIVRequestResultHandler*) processOrderAsync:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id) __target __handler:(SEL) __handler
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NIVRequestResultHandler*) processOrderAsync:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id<NIVSoapServiceResponse>) __target
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NSString*) processOrder:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __error:(NSError**) __error
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}
    
-(NIVRequestResultHandler*) getQuantitiesAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NIVRequestResultHandler*) getQuantitiesAsync:(NSString*) arg0 __target:(id<NIVSoapServiceResponse>) __target
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NSString*) getQuantities:(NSString*) arg0 __error:(NSError**) __error
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}
    
-(NIVRequestResultHandler*) getOpenOrdersByGLNAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NIVRequestResultHandler*) getOpenOrdersByGLNAsync:(NSString*) arg0 __target:(id<NIVSoapServiceResponse>) __target
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NSString*) getOpenOrdersByGLN:(NSString*) arg0 __error:(NSError**) __error
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}
    
-(NIVRequestResultHandler*) getItemByIdentifierAsync:(NSString*) arg0 arg1:(NSString*) arg1 __target:(id) __target __handler:(SEL) __handler
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NIVRequestResultHandler*) getItemByIdentifierAsync:(NSString*) arg0 arg1:(NSString*) arg1 __target:(id<NIVSoapServiceResponse>) __target
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NSString*) getItemByIdentifier:(NSString*) arg0 arg1:(NSString*) arg1 __error:(NSError**) __error
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}
    
-(NIVRequestResultHandler*) getItemsByBatchAsync:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id) __target __handler:(SEL) __handler
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NIVRequestResultHandler*) getItemsByBatchAsync:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __target:(id<NIVSoapServiceResponse>) __target
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NSString*) getItemsByBatch:(NSString*) arg0 arg1:(NSString*) arg1 arg2:(NSString*) arg2 __error:(NSError**) __error
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}
    
-(NIVRequestResultHandler*) getOrderForSSCCAsync:(NSString*) arg0 __target:(id) __target __handler:(SEL) __handler
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NIVRequestResultHandler*) getOrderForSSCCAsync:(NSString*) arg0 __target:(id<NIVSoapServiceResponse>) __target
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NSString*) getOrderForSSCC:(NSString*) arg0 __error:(NSError**) __error
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}
    
-(NIVRequestResultHandler*) resetTrackedItemsAsync:(id) __target __handler:(SEL) __handler
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(NIVRequestResultHandler*) resetTrackedItemsAsync:(id<NIVSoapServiceResponse>) __target
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
    return nil;
}

-(void) resetTrackedItems:(NSError**) __error
{
    /*This feature is available in Premium account, Check http://EasyWsdl.com/Payment/PremiumAccountDetails to see all benefits of Premium account*/
}

@end
